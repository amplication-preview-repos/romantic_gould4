/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { BuyListRelationFilter } from "../../buy/base/BuyListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { SellListRelationFilter } from "../../sell/base/SellListRelationFilter";
import { TransactionListRelationFilter } from "../../transaction/base/TransactionListRelationFilter";

@InputType()
class WalletWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  address?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => BuyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BuyListRelationFilter)
  @IsOptional()
  @Field(() => BuyListRelationFilter, {
    nullable: true,
  })
  buys?: BuyListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  privateKey?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SellListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SellListRelationFilter)
  @IsOptional()
  @Field(() => SellListRelationFilter, {
    nullable: true,
  })
  sells?: SellListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TransactionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TransactionListRelationFilter)
  @IsOptional()
  @Field(() => TransactionListRelationFilter, {
    nullable: true,
  })
  transactions?: TransactionListRelationFilter;
}

export { WalletWhereInput as WalletWhereInput };
